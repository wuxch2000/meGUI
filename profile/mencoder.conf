# config for wuxch
# command line:
# mencoder a.avi -o a.m4v

# quiet=yes

# destine file name
# o=ipod.m4v


# setting start time and end time
# ss <time> : Seek to given time position.
# ss=10
# ss=01:10:00

# endpos <time> : Stop at given time or byte position
# NOTE: endpos will add ss value!
# endpos=30

# subtitle config
# sub=Crossing.Hennessy.srt
subfont=C:/WINDOWS/Fonts/msyh.ttf
subcp=cp936
# subfont-text-scale=3
# subdelay=5


############# for ipod nano 4 http://support.apple.com/kb/SP497 #############

###### audio config ######
# oac : audio codec config
# available options:
#    copy     - frame copy, without re-encoding (useful for AC3)
#    pcm      - uncompressed PCM audio
#    mp3lame  - cbr/abr/vbr MP3 using libmp3lame
#    lavc     - FFmpeg audio encoder (MP2, AC3, ...)
#    twolame  - Twolame MP2 audio encoder
#    faac     - FAAC AAC audio encoder. http://en.wikipedia.org/wiki/FAAC
oac=faac=yes

# mpeg   : mpeg version. <2|4>
# faacopts=mpeg=4
# br     : bitrate.
# faacopts=br=128
# object : object type complexity. <1-4>
#                  1    MAIN (default)
#                  2    LOW
#                  3    SSR
#                  4    LTP (extremely slow)
# faacopts=object=2
# raw : Stores the bitstream as raw payload with extradata in the con- tainer header (default: 0,
#       corresponds to ADTS). Do not set this flag if not explicitly required or you will not
#       be able to remux the audio stream later on.
# faacopts=raw=yes

faacopts=mpeg=4:object=2:br=128:raw=yes

# channels : number of playback channels (default: 2)
#                  2    stereo
#                  4    surround
#                  6    full 5.1
channels=2

# sruate : Selects the output sample rate to be used. <Hz>
srate=48000


###### container format config ######
# available options:
#    avi      - Microsoft Audio/Video Interleaved
#    mpeg     - MPEG-1/2 system stream format
#    lavf     - FFmpeg libavformat muxers
#    rawvideo - (video only, one stream only) raw stream, no muxing
#    rawaudio - (audio only, one stream only) raw stream, no muxing
of=lavf=yes

# format : Override which container format to mux into
#    mpg : MPEG-1 systems and MPEG-2 PS
#    asf : Advanced Streaming Format
#    avi : Audio Video Interleave file
#    wav : Waveform Audio
#    swf : Macromedia Flash
#    flv : Macromedia Flash video files
#    rm : RealAudio and RealVideo
#    au : SUN AU format
#    nut : NUT open container format (experimental)
#    mov : QuickTime
#    mp4 : MPEG-4 format
#    ipod : MPEG-4 format with extra header flags required by  Apple iPod firmware
#    dv : Sony Digital Video container
#    matroska : Matroska
lavfopts=format=ipod

# frames per second(fps)
ofps=30

###### video config ######
# ovc : video codec config
# available options:
#    copy     - frame copy, without re-encoding. Doesn't work with filters.
#    frameno  - special audio-only file for 3-pass encoding, see DOCS.
#    raw      - uncompressed video. Use fourcc option to set format explicitly.
#    nuv      - nuppel video
#    lavc     - libavcodec codecs - best quality!
#    vfw      - VfW DLLs, read DOCS/HTML/en/encoding-guide.html.
#    qtvideo  - QuickTime DLLs, currently only SVQ1/3 are supported.
#    xvid     - XviD encoding
#    x264     - H.264 encoding
ovc=x264=yes
# bitrate : average bitrate to be used  in  kbits/second
x264encopts=bitrate=448
# vbv_maxrate : maximum local bitrate, in kbits/second
x264encopts=vbv_maxrate=960
# vbv_bufsize : averaging  period for vbv_maxrate, in kbits
#               (default: none, must be specified if vbv_maxrate is enabled)
x264encopts=vbv_bufsize=2000
# (no)cabac : Use  CABAC (Context-Adaptive Binary Arithmetic Coding) (default:
#             on).  Slightly slows down encoding and decoding, but should save
#             10-15%  bitrate.  Unless you are looking for decoding speed, you
#             should not disable it.
x264encopts=nocabac
# me=<name> : Select fullpixel motion estimation algorithm.
#                  dia  diamond search, radius 1 (fast)
#                  hex  hexagon search, radius 2 (default)
#                  umh  uneven multi-hexagon search (slow)
#                  esa  exhaustive search (very slow, and no better than umh)
x264encopts=me=hex
# subq=<0-9> :  Adjust subpel refinement quality.  This parameter controls qual-
#               ity versus speed tradeoffs involved in the motion estimation de-
#               cision process.  subq=5 can  compress  up  to  10%  better  than
#               subq=1.
#                  0    Runs fullpixel precision motion estimation on all candi-
#                       date macroblock types.  Then selects the best type  with
#                       SAD  metric  (faster than subq=1, not recommended unless
#                       you're looking for ultra-fast encoding).
#                  1    Does as 0, then refines the motion of that type to  fast
#                       quarterpixel precision (fast).
#                  2    Runs halfpixel precision motion estimation on all candi-
#                       date macroblock types.  Then selects the best type  with
#                       SATD  metric.   Then  refines the motion of that type to
#                       fast quarterpixel precision.
#                  3    As 2, but uses a slower quarterpixel refinement.
#                  4    Runs fast quarterpixel precision  motion  estimation  on
#                       all  candidate  macroblock types.  Then selects the best
#                       type with SATD metric.  Then finishes  the  quarterpixel
#                       refinement for that type.
#                  5    Runs  best quality quarterpixel precision motion estima-
#                       tion on all candidate macroblock types, before selecting
#                       the best type.  Also refines the two motion vectors used
#                       in bidirectional macroblocks with  SATD  metric,  rather
#                       than  reusing  vectors  from  the  forward  and backward
#                       searches.
#                  6    Enables rate-distortion optimization of macroblock types
#                       in I- and P-frames (default).
#                  7    Enables rate-distortion optimization of macroblock types
#                       in all frames.
#                  8    Enables rate-distortion optimization of  motion  vectors
#                       and intra prediction modes in I- and P-frames.
#                  9    Enables  rate-distortion  optimization of motion vectors
#                       and intra prediction modes in all frames (best).
x264encopts=subq=4
# frameref=<1-16>
#             Number of previous frames used as predictors in B- and  P-frames
#             (default:  1).   This  is effective in anime, but in live-action
#             material the improvements usually drop off very rapidly above  6
#             or  so  reference frames.  This has no effect on decoding speed,
#             but does increase the memory needed for decoding.  Some decoders
#             can only handle a maximum of 15 reference frames.
x264encopts=frameref=2
# trellis=<0-2> (cabac only) rate-distortion optimal quantization
#          0    disabled (default)
#          1    enabled only for the final encode
#          2    enabled   during  all  mode  decisions  (slow,  requires
#               subq>=6)
x264encopts=trellis=1
# level_idc=<10-51>
#               set the bitstream's level as defined by annex  A  of  the  H.264
#               standard  (default:  51  - level 5.1).  This is used for telling
#               the decoder what capabilities it needs to support.  Use this pa-
#               rameter  only  if you know what it means, and you have a need to
#               set it.
x264encopts=level_idc=30
# (no)global_header
#               Causes  SPS and PPS to appear only once, at the beginning of the
#               bitstream (default: disabled).  Some players, such as  the  Sony
#               PSP, require the use of this option.  The default behavior caus-
#               es SPS and PPS to repeat prior to each IDR frame.
x264encopts=global_header
# threads=<0-16>
#               Spawn threads to encode in parallel on multiple  CPUs  (default:
#               1).   This  has  a  slight penalty to compression quality.  0 or
#               'auto' tells x264 to detect how many CPUs you have and  pick  an
#               appropriate number of threads.
x264encopts=threads=auto

# video filter config
#        scale[=w:h[:ilaced[:chr_drop[:par[:par2[:presize[:noup[:arnd]]]]]]]]
#               Scales the image with the software scaler (slow) and performs  a
#               YUV<->RGB colorspace conversion (also see -sws).

#                  <w>,<h>
#                       scaled width/height (default: original width/height)
#                       NOTE:  If -zoom is used, and underlying filters (includ-
#                       ing libvo) are incapable  of  scaling,  it  defaults  to
#                       d_width/d_height!
#                           0:   scaled d_width/d_height
#                          -1:   original width/height
#                          -2:   Calculate w/h using the other dimension and the
#                          prescaled aspect ratio.
#                          -3:   Calculate w/h using the other dimension and the
#                          original aspect ratio.
#                          -(n+8):  Like -n above, but rounding the dimension to
#                          the closest multiple of 16.

#                  <ilaced>
#                       Toggle interlaced scaling.
#                          0: off (default)
#                          1: on

#                  <chr_drop>
#                       chroma skipping
#                          0: Use all available input lines for chroma.
#                          1: Use only every 2. input line for chroma.
#                          2: Use only every 4. input line for chroma.
#                          3: Use only every 8. input line for chroma.

#                  <par>[:<par2>] (also see -sws)
#                       Set some scaling parameters depending  on  the  type  of
#                       scaler selected with -sws.
#                          -sws 2 (bicubic):  B (blurring) and C (ringing)
#                          0.00:0.60 default
#                          0.00:0.75 VirtualDub's "precise bicubic"
#                          0.00:0.50 Catmull-Rom spline
#                          0.33:0.33 Mitchell-Netravali spline
#                          1.00:0.00 cubic B-spline
#                          -sws 7 (gaussian): sharpness (0 (soft) - 100 (sharp))
#                          -sws 9 (lanczos):  filter length (1-10)

#                  <presize>
#                       Scale to preset sizes.
#                          qntsc:   352x240 (NTSC quarter screen)
#                          qpal:    352x288 (PAL quarter screen)
#                          ntsc:    720x480 (standard NTSC)
#                          pal:     720x576 (standard PAL)
#                          sntsc:   640x480 (square pixel NTSC)
#                          spal:    768x576 (square pixel PAL)

#                  <noup>
#                       Disallow upscaling past the original dimensions.
#                          0: Allow upscaling (default).
#                          1: Disallow upscaling if one  dimension  exceeds  its
#                          original value.
#                          2: Disallow upscaling if both dimensions exceed their
#                          original values.

#                  <arnd>
#                       Accurate rounding for the vertical scaler, which may  be
#                       faster or slower than the default rounding.
#                          0: Disable accurate rounding (default).
#                          1: Enable accurate rounding.
# ipod 320 * 240
vf=scale=-10:240,harddup

# the follow code should be test 

# Finally I can create an AVC MP4 with profile baseline@1.3 (up to ipod video standard). Additional
# x264encopts options have to be inserted, i.e. "level_idc=13:nocabac", otherwise it will generate
# the profile main@5.1, which may cause itune refusing to transfer to ipod.

# level_idc=13:nocabac

	# # iPod/iPhone HQ
	# frameref=":frameref=1"
	# mixed_refs=":mixed_refs"
	# bframes=":bframes=0"
	# b_adapt=":b_adapt=0"
	# b_pyramid=":b_pyramid=none"
	# weight_b=":noweight_b"
	# weightp=":weightp=0"
	# direct_pred=":direct_pred=none"
	# aq_mode=":aq_mode=1"
	# subq=":subq=8"
	# mbtree=":mbtree"
	# psy_rd=":psy_rd=0.8,0.0"
	# me=":me=umh"
	# me_range=":me_range=16"
	# partitions=":partitions=p8x8,i4x4"
	# deblock=":deblock"
	# chroma_me=":chroma_me"
	# trellis=":trellis=0"
	# cabac=":nocabac"
	# a8x8dct=":no8x8dct"
	# fast_pskip=":nofast_pskip"
	# dct_decimate=":dct_decimate"
	# level_idc=":level_idc=30"
	# case "$3" in
	# 	iphq)
	# 	vbv_maxrate=":vbv_maxrate=2500"
	# 	vbv_bufsize=":vbv_bufsize=2000"
	# 	;;
	# 	iphhq)
	# 	vbv_maxrate=":vbv_maxrate=1500"
	# 	vbv_bufsize=":vbv_bufsize=1000"
	# 	;;
	# esac
	# ;;


# ipod nano 3rd specifications

# H.264 video, up to 1.5 Mbps, 640 by 480 pixels, 30 frames per second, Low-Complexity version of
# the H.264 Baseline Profile with AAC-LC audio up to 160 Kbps, 48kHz, stereo audio in .m4v, .mp4,
# and .mov file formats; H.264 video, up to 2.5 Mbps, 640 by 480 pixels, 30 frames per second,
# Baseline Profile up to Level 3.0 with AAC-LC audio up to 160 Kbps, 48kHz, stereo audio in .m4v,
# .mp4, and .mov file formats; MPEG-4 video, up to 2.5 Mbps, 640 by 480 pixels, 30 frames per
# second, Simple Profile with AAC-LC audio up to 160 Kbps, 48kHz, stereo audio in .m4v, .mp4, and
# .mov file formats

#AAC (16 to 320 Kbps), Protected AAC (from iTunes Store), MP3 (16 to 320 Kbps), MP3 VBR, Audible
#(formats 2, 3, and 4), Apple Lossless, WAV, and AIFF

# Audio

#     * Skip-free playback
#     * Frequency response: 20Hz to 20,000Hz
#     * Audio formats supported: AAC (16 to 320 Kbps), Protected AAC (from iTunes Store), MP3 (16 to 320 Kbps), MP3 VBR, Audible (formats 2, 3, and 4), Apple Lossless, AIFF, and WAV
#     * User-configurable maximum volume limit

# <GenericProfileOfx264Settings xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
#   <Name>Device-iPod</Name>
#   <Settings>
#     <EncodingMode>4</EncodingMode>
#     <BitrateQuantizer>600</BitrateQuantizer>
#     <KeyframeInterval>250</KeyframeInterval>
#     <NbBframes>0</NbBframes>
#     <MinQuantizer>16</MinQuantizer>
#     <MaxQuantizer>51</MaxQuantizer>
#     <Turbo>true</Turbo>
#     <V4MV>false</V4MV>
#     <QPel>false</QPel>
#     <Trellis>false</Trellis>
#     <CreditsQuantizer>40</CreditsQuantizer>
#     <Logfile>.stats</Logfile>
#     <VideoName />
#     <CustomEncoderOptions />
#     <FourCC>1</FourCC>
#     <MaxNumberOfPasses>3</MaxNumberOfPasses>
#     <NbThreads>0</NbThreads>
#     <QuantizerCRF>600</QuantizerCRF>
#     <EncodeInterlaced>false</EncodeInterlaced>
#     <NoDCTDecimate>false</NoDCTDecimate>
#     <PSNRCalculation>false</PSNRCalculation>
#     <noFastPSkip>false</noFastPSkip>
#     <NoiseReduction>0</NoiseReduction>
#     <MixedRefs>false</MixedRefs>
#     <X264Trellis>0</X264Trellis>
#     <NbRefFrames>1</NbRefFrames>
#     <AlphaDeblock>0</AlphaDeblock>
#     <BetaDeblock>0</BetaDeblock>
#     <SubPelRefinement>5</SubPelRefinement>
#     <MaxQuantDelta>4</MaxQuantDelta>
#     <TempQuantBlur>0</TempQuantBlur>
#     <BframePredictionMode>0</BframePredictionMode>
#     <VBVBufferSize>768</VBVBufferSize>
#     <VBVMaxBitrate>768</VBVMaxBitrate>
#     <METype>2</METype>
#     <MERange>12</MERange>
#     <MinGOPSize>25</MinGOPSize>
#     <Profile>0</Profile>
#     <Level>3</Level>
#     <IPFactor>1.4</IPFactor>
#     <PBFactor>1.3</PBFactor>
#     <ChromaQPOffset>0</ChromaQPOffset>
#     <VBVInitialBuffer>0.9</VBVInitialBuffer>
#     <BitrateVariance>1.0</BitrateVariance>
#     <QuantCompression>0.6</QuantCompression>
#     <TempComplexityBlur>20</TempComplexityBlur>
#     <TempQuanBlurCC>0.5</TempQuanBlurCC>
#     <SCDSensitivity>40</SCDSensitivity>
#     <BframeBias>0</BframeBias>
#     <PsyRDO>1</PsyRDO>
#     <PsyTrellis>0</PsyTrellis>
#     <Deblock>true</Deblock>
#     <Cabac>false</Cabac>
#     <WeightedBPrediction>false</WeightedBPrediction>
#     <NewAdaptiveBFrames>1</NewAdaptiveBFrames>
#     <BFramePyramid>false</BFramePyramid>
#     <ChromaME>true</ChromaME>
#     <MacroBlockOptions>2</MacroBlockOptions>
#     <P8x8mv>true</P8x8mv>
#     <B8x8mv>true</B8x8mv>
#     <I4x4mv>true</I4x4mv>
#     <I8x8mv>false</I8x8mv>
#     <P4x4mv>true</P4x4mv>
#     <AdaptiveDCT>false</AdaptiveDCT>
#     <SSIMCalculation>false</SSIMCalculation>
#     <Lossless>false</Lossless>
#     <QuantizerMatrix>Flat (none)</QuantizerMatrix>
#     <QuantizerMatrixType>0</QuantizerMatrixType>
#     <DeadZoneInter>21</DeadZoneInter>
#     <DeadZoneIntra>11</DeadZoneIntra>
#     <AQmode>1</AQmode>
#     <AQstrength>1.0</AQstrength>
#   </Settings>
# </GenericProfileOfx264Settings>
